p1
p1 = m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop)) %>%
ggplot() + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
p1
load_all()
m1 = ms.Top10HoldingPlot('FXAIX')
load_all()
m1 = ms.Top10HoldingPlot('FXAIX')
View(p1)
load_all()
m1 = ms.Top10HoldingPlot('FXAIX')
p1
load_all()
m1 = ms.Top10HoldingPlot('FXAIX')
m1
#' @title ms.Top10HoldingPlot
#' @description Gives the MorningStar Top 10 Holding Plot of the fund
#' @param ticker Enter the TICKER of the Fund
#' @return Gives the Morningstar Top 10 Holding Plot of the Fund
#' @details Gives the fund's top 10 Holdings Plot as cmputed by MorningStar.
#' @examples
#' ms.Top10HoldingPlot('FXAIX')
#' @rdname ms.Top10HoldingPlot
#' @import dplyr
#' @import stringr
#' @import ggplot2
#' @export
ms.Top10HoldingPlot = function(ticker){
m1 = ms.Top10Holding(ticker)
colnames(m1)= c('name', 'symbol', 'perc_asset')
p1 = m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop)) %>%
ggplot() + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
return(p1)
}
m1 = ms.Top10HoldingPlot('FXAIX')
load_all()
m1 = ms.Top10HoldingPlot('FXAIX')
m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop)) %>%
ggplot() + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
m1 = ms.Top10Holding(ticker)
colnames(m1)= c('name', 'symbol', 'perc_asset')
m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop)) %>%
ggplot() + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
ticker = 'FXAIX'
m1 = ms.Top10Holding(ticker)
colnames(m1)= c('name', 'symbol', 'perc_asset')
m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop)) %>%
ggplot() + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
m1 = ms.Top10Holding(ticker)
colnames(m1)= c('name', 'symbol', 'perc_asset')
m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m1) + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
m1 = ms.Top10Holding(ticker)
colnames(m1)= c('name', 'symbol', 'perc_asset')
m1 = m1 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m1) + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
m1 = ms.Top10HoldingPlot('FXAIX')
m1 = ms.Top10HoldingPlot('FXAIX')
#' @title ms.Top10HoldingPlot
#' @description Gives the MorningStar Top 10 Holding Plot of the fund
#' @param ticker Enter the TICKER of the Fund
#' @return Gives the Morningstar Top 10 Holding Plot of the Fund
#' @details Gives the fund's top 10 Holdings Plot as cmputed by MorningStar.
#' @examples
#' ms.Top10HoldingPlot('FXAIX')
#' @rdname ms.Top10HoldingPlot
#' @import dplyr
#' @import stringr
#' @import ggplot2
#' @export
ms.Top10HoldingPlot = function(ticker){
m2 = ms.Top10Holding(ticker)
colnames(m1)= c('name', 'symbol', 'perc_asset')
m2 = m2 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m2) + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
}
m1 = ms.Top10HoldingPlot('FXAIX')
#' @title ms.Top10HoldingPlot
#' @description Gives the MorningStar Top 10 Holding Plot of the fund
#' @param ticker Enter the TICKER of the Fund
#' @return Gives the Morningstar Top 10 Holding Plot of the Fund
#' @details Gives the fund's top 10 Holdings Plot as cmputed by MorningStar.
#' @examples
#' ms.Top10HoldingPlot('FXAIX')
#' @rdname ms.Top10HoldingPlot
#' @import dplyr
#' @import stringr
#' @import ggplot2
#' @export
ms.Top10HoldingPlot = function(ticker){
m2 = ms.Top10Holding(ticker)
colnames(m2)= c('name', 'symbol', 'perc_asset')
m2 = m2 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m2) + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
}
m1 = ms.Top10HoldingPlot('FXAIX')
m1 = ms.Top10HoldingPlot('TIREX')
m2 = ms.Top10Holding(ticker)
colnames(m2)= c('name', 'symbol', 'perc_asset')
m2 = m2 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m2) + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
ticker = 'FXAIX'
m2 = ms.Top10Holding(ticker)
colnames(m2)= c('name', 'symbol', 'perc_asset')
m2 = m2 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m2) + geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') + coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
#' @title ms.Top10HoldingPlot
#' @description Gives the MorningStar Top 10 Holding Plot of the fund
#' @param ticker Enter the TICKER of the Fund
#' @return Gives the Morningstar Top 10 Holding Plot of the Fund
#' @details Gives the fund's top 10 Holdings Plot as cmputed by MorningStar.
#' @examples
#' ms.Top10HoldingPlot('FXAIX')
#' @rdname ms.Top10HoldingPlot
#' @import dplyr
#' @import stringr
#' @import ggplot2
#' @export
ms.Top10HoldingPlot = function(ticker){
m2 = ms.Top10Holding(ticker)
colnames(m2)= c('name', 'symbol', 'perc_asset')
m2 = m2 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m2) +
geom_bar(aes(x = '',y = prop, fill = symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
}
m1 = ms.Top10HoldingPlot('TIREX')
ms.Top10HoldingPlot('TIREX')
#' @title ms.Top10HoldingPlot
#' @description Gives the MorningStar Top 10 Holding Plot of the fund
#' @param ticker Enter the TICKER of the Fund
#' @return Gives the Morningstar Top 10 Holding Plot of the Fund
#' @details Gives the fund's top 10 Holdings Plot as cmputed by MorningStar.
#' @examples
#' ms.Top10HoldingPlot('FXAIX')
#' @rdname ms.Top10HoldingPlot
#' @import dplyr
#' @import stringr
#' @import ggplot2
#' @export
ms.Top10HoldingPlot = function(ticker){
m2 = ms.Top10Holding(ticker)
colnames(m2)= c('name', 'symbol', 'perc_asset')
m2 = m2 %>%
mutate(prop = perc_asset/sum(perc_asset) * 100) %>%
arrange(desc(prop))
ggplot(data = m2) +
geom_bar(aes(x = '',y = prop, fill = name), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
}
ms.Top10HoldingPlot('TIREX')
check()
check()
m2 = ms.Top10Holding(ticker)
colnames(m2)= c('name', 'symbol', 'perc_asset')
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = perc_asset, fill = symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings')
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = perc_asset/sum(perc_asset), fill = symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
check()
m2 = ms.Top10Holding(ticker)
m2
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Assets'/sum('% Assets'), fill = symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Assets'/sum(m2[,3]), fill = symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
check()
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Asset', fill = symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Asset', fill = Symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
sumprop = sum(m2$`% Assets`)
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Asset'/sumprop, fill = Symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Asset', fill = Symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
ms.Top10HoldingPlot('TIREX')
#' @title ms.Top10HoldingPlot
#' @description Gives the MorningStar Top 10 Holding Plot of the fund
#' @param ticker Enter the TICKER of the Fund
#' @return Gives the Morningstar Top 10 Holding Plot of the Fund
#' @details Gives the fund's top 10 Holdings Plot as cmputed by MorningStar.
#' @examples
#' ms.Top10HoldingPlot('FXAIX')
#' @rdname ms.Top10HoldingPlot
#' @import dplyr
#' @import stringr
#' @import ggplot2
#' @export
ms.Top10HoldingPlot = function(ticker){
m2 = ms.Top10Holding(ticker)
sumprop = sum(m2$`% Assets`)
m2 %>%
ggplot() +
geom_bar(aes(x = '',y = '% Asset', fill = Symbol), stat = 'identity') +
coord_polar('y') + labs(x = NULL, y = NULL, title = 'Top 10 Holdings') +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5, color = "#666666"))
}
ms.Top10HoldingPlot('TIREX')
m2 = ms.Top10Holding(ticker) %>% summarize('% Asset' = '% Asset'/sum('% Asset'))
stat(m2$`% Assets`)
prop(m2$`% Assets`)
load_all()
ms.10yReturn('TIREX')
load_all()
load_all()
ms.10yExcessCategoryReturn('TIREX')
ms.10yCategoryReturn('TIREX')
ms.10yExcessCategoryReturn('FXAIX')
ms.10yCategoryReturn('TIREX')
#' @title ms.10yCategoryReturn
#' @description Provides the Category Return of the Security
#' @param ticker Enter the TICKER
#' @return The output gives the category return of the funs
#' @details Gives the category return for the input TICKER (Fund)
#' @examples
#' ms.10yCategoryReturn('FXAIX')
#' @rdname ms.10yCategoryReturn
#' @import rvest
#' @import stringr
#' @import xml2
#' @importFrom tidyr separate
#' @export
ms.10yCategoryReturn =  function(ticker){
url = paste0('https://in.finance.yahoo.com/quote/', ticker,'/performance?p=',  ticker)
d = read_html(url) %>% html_node('body') %>% xml_find_all("//div[contains(@class, 'Bdbw(1px) Bdbc($seperatorColor) Bdbs(s) H(25px) Pt(10px)')]") %>% html_text()
d = str_remove_all(str_subset(d, '10-year'), '10-year')[1]
DF = data.frame(d)
d = separate(DF, d, into = c('pre', 'post'), sep = '%') %>% pull('post')
d = parse_number(d)
d = d/100
d
}
ms.10yCategoryReturn('TIREX')
ms.10yExcessCategoryReturn('TIREX')
load_all()
ms.10yExcessCategoryReturn('TIREX')
load_all()
ms.YtdExcessCategoryReturn('TIREX')
load_all()
ms.YtdExcessCategoryReturn('TIREX')
load_all()
ms.YTDExcessCategoryReturn('TIREX')
ms.3yExcessCategoryReturn('TIREX')
ms.5yExcessCategoryReturn('TIREX')
ms.10yExcessCategoryReturn('TIREX')
load_all()
p1 = PortfolioManager('TIREX')
p1 = PortfolioManager('TIREX', 'detailed')
View(p1)
load_all()
p1 = PortfolioManager('TIREX', 'detailed')
View(p1)
ms.ytdreturn('FXAIX')
ms.ytdreturn('TISCX')
ms.ytdreturn('TISEX')
check()
globalVariables('Symbol')
check()
library(microbenchmark)
microbenchmark(PortfolioManager('FXAIX'))
system.time(PortfolioManager('FXAIX'))
ticker = c('TIBFX', 'TIEIX','TIGRX','TIIEX','TILGX',"TRLIX",'TCTIX','TCNIX','TCWIX','TCYIX','TCRIX','TCIIX','TCOIX','TTFIX','TFTIX','TTRIX','TLXNX','TLRIX','TRPWX','TIMVX','TISEX','TIREX','TISBX',"TISCX")
p1 = PortfolioManager(ticker, 'detailed')
View(p1)
export.portfolio(p1, path = 'C:/Users/DELL/Desktop/Anurag/port.csv')
ticker = 'TIREX'
url = paste0('https://in.finance.yahoo.com/quote/', ticker,'/performance?p=',  ticker)
d = read_html(url) %>% html_node('body') %>% xml_find_all("//div[contains(@class, 'Bdbw(1px) Bdbc($seperatorColor) Bdbs(s) H(25px) Pt(10px)')]") %>% html_text()
d
d = str_remove_all(str_subset(d, 'YTD'), 'YTD')
d
d = parse_number(d)[[1]]
d
#' @title ms.YTDExcessCategoryReturn
#' @description Provides the Excess Category Return of the Security
#' @param ticker Enter the TICKER
#' @return The output gives the Excess category return of the funs
#' @details Gives the Excess category return for the input TICKER (Fund)
#' @examples
#' ms.YTDExcessCategoryReturn('FXAIX')
#' @rdname ms.YTDExcessCategoryReturn
#' @import rvest
#' @import stringr
#' @import xml2
#' @importFrom tidyr separate
#' @export
ms.YTDExcessCategoryReturn =  function(ticker){
url = paste0('https://in.finance.yahoo.com/quote/', ticker,'/performance?p=',  ticker)
d = read_html(url) %>% html_node('body') %>% xml_find_all("//div[contains(@class, 'Bdbw(1px) Bdbc($seperatorColor) Bdbs(s) H(25px) Pt(10px)')]") %>% html_text()
d = str_remove_all(str_subset(d, 'YTD'), 'YTD')
d = parse_number(d)[[1]]
d = d/100
e1 = d - ms.YTDCategoryReturn(ticker)
e1
}
ticker = c('TIBFX', 'TIEIX','TIGRX','TIIEX','TILGX',"TRLIX",'TCTIX','TCNIX','TCWIX','TCYIX','TCRIX','TCIIX','TCOIX','TTFIX','TFTIX','TTRIX','TLXNX','TLRIX','TRPWX','TIMVX','TISEX','TIREX','TISBX',"TISCX")
p1 = PortfolioManager(ticker, 'detailed')
export.portfolio(p1, path = 'C:/Users/DELL/Desktop/Anurag/port.csv')
load_all()
#' @title ms.GrowthTrack
#' @description Plots the growth of input amount in a fund
#' @param ticker Fund TICKER
#' @param growth_amount Amount invested in the fund, Default: 10000
#' @param benchmark Benchmark to compare the fund with, Default: '^GSPC'
#' @param time_period Investment Horizon: c("1m", "3m", "6m", "YTD", "1y", "3y", "5y", "max")
#' @return Plots the growth of the investment (Mutua Fund/ETFs) and compares it with provided benchmark
#' @details Plots the cumulative groth of the fund in a mutual fund/ETFs and compares it with the input benchmark.
#' @examples
#' ms.GrowthTrack('FXAIX')
#' @rdname ms.GrowthTrack
#' @import quantmod
#' @importFrom xts merge.xts plot.xts
#' @export
ms.GrowthTrack = function(ticker, growth_amount = 10000, benchmark = '^GSPC', time_period = c('1m', '3m', '6m', 'YTD', '1y', '3y', '5y', 'max')){
fund = getSymbols(ticker, auto.assign = FALSE)
fund = fund[,6]
if(benchmark == ''){
bench = getSymbols(ticker, auto.assign = FALSE)
bench = bench[,6]
}else{
bench = getSymbols(benchmark, auto.assign = FALSE)
bench = bench[,6]
}
if(time_period == '1m'){
fund = tail(fund, 21)
}else if(time_period == '3m'){
fund = tail(fund, 63)
}else if(time_period == '6m'){
fund = tail(fund, 126)
}else if(time_period == '1y'){
fund = tail(fund, 252)
}else if(time_period == '3y'){
fund = tail(fund, 756)
}else if(time_period == '5m'){
fund = tail(fund, 1260)
}else if(time_period == 'YTD'){
date = paste0(format(Sys.Date(), '%Y'),'/')
fund = fund[date,]
}else{
fund = fund
}
if(time_period == '1m'){
bench = tail(bench, 21)
}else if(time_period == '3m'){
bench = tail(bench, 63)
}else if(time_period == '6m'){
bench = tail(bench, 126)
}else if(time_period == '1y'){
bench = tail(bench, 252)
}else if(time_period == '3y'){
bench = tail(bench, 756)
}else if(time_period == '5m'){
bench = tail(bench, 1260)
}else if(time_period == 'YTD'){
date = paste0(format(Sys.Date(), '%Y'),'/')
bench = bench[date,]
}else{
bench = bench
}
fund = cumsum(periodReturn(fund, 'daily')*growth_amount)
fund = fund + growth_amount
bench = cumsum(periodReturn(bench, 'daily')*growth_amount)
bench = bench + growth_amount
dat = merge.xts(fund, bench)
colnames(dat) = c(paste0(ticker), paste0(benchmark))
return(plot.xts(dat, legend.loc = 'topright', main = 'Growth of 10,000; Fund Vs Fund/Benchmark', yaxis.left = TRUE, col = c('blue', 'green'), grid.ticks.on = 'auto'))
}
library(tidyverse)
library(rvest)
library(devtools)
library(PerformanceAnalytics)
library(quantmod)
load_all()
View(Return.excess)
View(Return.excess)
View(Return.excess)
Return.excess
ms.GrowthTrack('TIREX')
ms.GrowthTrack('TIREX', time_period = 'YTD')
check()
build()
Return.annualized
build()
ms.GrowthTrack('FXAIX')
ms.GrowthTrack('FXAIX', time_period = 'YTD')
build()
ms.GrowthTrack('FXAIX')
?Return.excess
check()
cranlogs::cran_downloads('rportfolio', 'last-month')
cranlogs
cranlogs::cran_downloads('roptions', 'last-month')
sum(cranlogs::cran_downloads('rportfolio', 'last-month')[,2])
sum(cranlogs::cran_downloads('roptions', 'last-month')[,2])
ms.GrowthTrack('FXAIX', time_period = 'YTD')
build()
ms.GrowthTrack('FXAIX')
check()
check()
ms.10yReturn('TIREX')
ticker = c('TIBFX', 'TIEIX','TIGRX','TIIEX','TILGX',"TRLIX",'TCTIX','TCNIX','TCWIX','TCYIX','TCRIX','TCIIX','TCOIX','TTFIX','TFTIX','TTRIX','TLXNX','TLRIX','TRPWX','TIMVX','TISEX','TIREX','TISBX',"TISCX")
p1 = map_dbl(ticker, ms.10yReturn)
system.time(map_dbl(ticker, ms.10yReturn))
system.time(map_dbl(ticker, ms.10yReturn))
system.time(map_dbl(ticker, ms.10yReturn))
p2 = map_dbl(ticker, ms.Rating)
p2
(1+0.04)^4-1
